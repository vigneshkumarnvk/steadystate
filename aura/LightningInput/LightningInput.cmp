<aura:component>
    <!--<aura:attribute name="name" type="String" access="public"/>-->
    <aura:attribute name="label" type="String" access="public"/>
    <aura:attribute name="value" type="Object" access="public"/>
    <aura:attribute name="type" type="String" access="public"/>
    <aura:attribute name="variant" type="String" access="public"/>
    <aura:attribute name="step" type="Decimal" access="public"/>
    <aura:attribute name="disabled" type="Boolean" access="public"/>
    <aura:attribute name="required" type="Boolean" access="public"/>
    <aura:attribute name="min" type="Decimal" access="public"/>
    <aura:attribute name="validity" type="Object" access="public"/>
    <aura:attribute name="formatter" type="String" access="public"/>
    <aura:attribute name="messageWhenValueMissing" type="String" access="public"/>
    <aura:attribute name="messageWhenRangeUnderflow" type="String" access="public"/>
    <aura:attribute name="xValue" type="Object" access="private"/>
    
    <!--events-->
    <aura:registerEvent name="onchange" type="c.LightningInputChangeEvent"/>
                                                              
    <!--handlers-->
    <aura:handler name="init" value="{!this}" action="{!c.doInit}"/>
    
    <!--methods-->
    <aura:method name="focus" action="{!c.focus}"/>
    <aura:method name="showHelpMessageIfInvalid" action="{!c.showHelpMessageIfInvalid}"/>
    <aura:method name="clearCustomValidity" action="{!c.clearCustomValidity}"/>
    <aura:method name="reportValidity" action="{!c.reportValidity}">
        <aura:attribute name="message" type="String"/>
    </aura:method>
    <aura:method name="rollbackValue" action="{!c.rollbackValue}"/>
    
    <lightning:input aura:id="custom-lightning-input" type="{!v.type}" label="{!v.label}" variant="{!v.variant}"
                     value="{!v.value}" min="{!v.min}" step="{!v.step}" validity="{!v.validity}"
                     formatter="{!v.formatter}" onfocus="{!c.handleFocus}" onblur="{!c.handleBlur}"
                     disabled="{!v.disabled}" required="{!v.required}"
                     messageWhenValueMissing="{!v.messageWhenValueMissing}" messageWhenRangeUnderflow="{!v.messageWhenRangeUnderflow}" autocomplete="off"/>
</aura:component>